---
import BlogCard from '@/components/BlogCard.astro'
import Breadcrumbs from '@/components/Breadcrumbs.astro'
import Line from '@/components/line.astro'
import PageHead from '@/components/PageHead.astro'
import PaginationComponent from '@/components/ui/pagination'
import { SITE } from '@/consts'
import Layout from '@/layouts/Layout.astro'
import { getAllPosts, groupPostsByYear } from '@/lib/data-utils'
import type { PaginateFunction } from 'astro'

export async function getStaticPaths({
  paginate,
}: {
  paginate: PaginateFunction
}) {
  const allPosts = await getAllPosts()
  return paginate(allPosts, { pageSize: SITE.postsPerPage })
}

const { page } = Astro.props

const postsByYear = groupPostsByYear(page.data)
const years = Object.keys(postsByYear).sort((a, b) => parseInt(b) - parseInt(a))
---

<Layout class="max-w-2xl pt-10">
  <PageHead slot="head" title="Blog" />
  <Line 
    direction="vertical"
    class='fixed top-0 right-4 md:right-[calc(50%-42rem/2)]'
  />
  <Line 
    direction="vertical"
    class='fixed top-0 left-4 md:left-[calc(50%-42rem/2)]'
  />
  <div class="px-8 md:px-4">
    <Breadcrumbs
      items={[
        { label: 'Blog', href: '/blog', icon: 'lucide:archive' },
        { label: `Page ${page.currentPage}`, icon: 'lucide:folder-open' },
      ]}
    />
  </div>

  <div class="flex min-h-[calc(100vh-18rem)] flex-col gap-y-8">
    {
      years.map((year) => (
        <section class="flex flex-col">
          <div class="relative px-8 p-4 md:p-4 md:px-4">
            <Line 
              direction="horizontal"
              class="absolute top-0 left-1/2"
            />
            <div class="font-medium">{year}</div>
            <Line 
              direction="horizontal"
              class="absolute bottom-0 left-1/2"
            />
          </div>
          <ul class="flex flex-col px-4 md:px-0">
            {postsByYear[year].map((post) => (
              <li>
                <BlogCard entry={post} />
              </li>
            ))}
          </ul>
        </section>
      ))
    }
  </div>

  <PaginationComponent
    currentPage={page.currentPage}
    totalPages={page.lastPage}
    baseUrl="/blog/"
    client:load
  />
</Layout>
