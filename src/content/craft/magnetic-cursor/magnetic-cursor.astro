<section class="craft-item__container-outer">
  <div class="craft-item__container overflow-hidden">
    <div class="flex items-center gap-x-2">
      <a href="" class="px-3 py-1 text-foreground rounded-md magnetic-btn no-underline">
        Link 01
      </a>
      <a href="" class="px-3 py-1 text-foreground rounded-md magnetic-btn no-underline">
        Link 02
      </a>
      <a href="" class="px-3 py-1 text-foreground rounded-md magnetic-btn no-underline">
        Link 03
      </a>
    </div>
    <div id="cursor">
    </div>
  </div>
</section>
<script src="https://cdn.jsdelivr.net/npm/gsap@3.13.0/dist/gsap.min.js" is:inline></script>

<script is:inline>
const cursor = document.querySelector("#cursor");

let isStuck = false;

let mouseOriginalState ={
  width: cursor.getBoundingClientRect().width,
  height: cursor.getBoundingClientRect().height,
  borderRadius: "50%"
}

let mouse = {
  x: 0,
  y: 0,
};

function updateCursorPosition(e) {
  mouse.x = e.clientX;
  mouse.y = e.clientY;
}

function updateCursor(){
  if (!isStuck) {
    gsap.to(cursor, {
      duration: 0.3,
      ease: 'power3',
      x: mouse.x - mouseOriginalState.width/2,
      y: mouse.y - mouseOriginalState.height/2,
    });
  }

  requestAnimationFrame(updateCursor);
}

updateCursor();

function handleMouseEnter(e){
  isStuck = true;
  const targetBox = e.target.getBoundingClientRect();
  cursor.classList.add('active');

  const targetStyles = getComputedStyle(e.target);

  gsap.to(cursor,{
    width: targetBox.width,
    height: targetBox.height,
    y: targetBox.y,
    x: targetBox.x,
    duration: 0.3,
    borderRadius: targetStyles.borderRadius || 0,
    ease: "power3",
  })
}

function handleMouseLeave(e){
  isStuck = false;
  cursor.classList.remove('active');
  gsap.to(cursor,{
    width: mouseOriginalState.width,
    height: mouseOriginalState.height,
    duration: 0.3,
    ease: "power3",
    borderRadius: mouseOriginalState.borderRadius,
  })
}

document.querySelector('.craft-item__container').addEventListener("mousemove", (e) => {
  updateCursorPosition(e);
});

document.querySelectorAll('a').forEach(link =>{

  let xTo = gsap.quickTo(link, "x", { duration: 0.3, ease: "power3" }),
      yTo = gsap.quickTo(link, "y", { duration: 0.3, ease: "power3" });

  link.addEventListener("mouseenter", (e) => {
    handleMouseEnter(e);
  });

  link.addEventListener('mousemove', (e) =>{
    const rect = link.getBoundingClientRect();
    const relX = e.clientX - rect.left - rect.width / 2;
    const relY = e.clientY - rect.top - rect.height / 2;
    xTo(relX * 0.2);
    yTo(relY * 0.2);
    handleMouseEnter(e);
  })

  link.addEventListener("mouseleave", (e) => {
     xTo(0);
    yTo(0);
    handleMouseLeave(e);
  })
})
</script>

<style>
#cursor {
  position: fixed;
  top: 0;
  left: 0;
  width: 20px;
  height: 20px;
  border-radius: 50%;
  background: #fff;
  pointer-events: none;
  z-index: 9999;
  opacity: 0;
  transition: opacity 0.2s cubic-bezier(0.39, 0.575, 0.565, 1); 
  transform-origin: center center; /* Centraliza a transformação */
}

.craft-item__container:hover > #cursor {
  opacity: 0.4;
}

#cursor.active{
  opacity: 0.1 !important;
}
</style>