---
import { ThemeToggleTooltip } from "@/components/theme-toggle-tooltip"
---
<ThemeToggleTooltip client:load />

<script is:inline data-astro-rerun>
  const theme = (() => {
    const localStorageTheme = localStorage?.getItem('crisfsdev-theme') ?? ''
    if (['dark', 'light'].includes(localStorageTheme)) {
      return localStorageTheme
    }
    if (window.matchMedia('(prefers-color-scheme: dark)').matches) {
      return 'dark'
    }
    return 'light'
  })()

  if (theme === 'light') {
    document.documentElement.classList.remove('dark')
  } else {
    document.documentElement.classList.add('dark')
  }

  window.localStorage.setItem('theme', theme)
</script>

<script>
  function handleToggleClick(dataTheme: 'light' | 'dark') {
    const element = document.documentElement

    element.classList.add('disable-transitions')

    element.classList.remove('light', 'dark')

    if (dataTheme === 'dark') {
      element.classList.add('dark')
      document.querySelector(`.theme-toggle-btn[data-site-theme="dark"]`)?.classList.toggle('active')
    } else if (dataTheme === 'light') {
      element.classList.add('light')
      document.querySelector(`.theme-toggle-btn[data-site-theme="light"]`)?.classList.toggle('active')
    } 

    window.getComputedStyle(element).getPropertyValue('opacity')

    requestAnimationFrame(() => {
      element.classList.remove('disable-transitions')
    })

    localStorage.setItem('crisfsdev-theme', dataTheme)
  }


  function initThemeToggle() {
    const themeBtns = document.querySelectorAll('.theme-toggle-btn')
    if (themeBtns) {
      themeBtns.forEach(btn => {
        btn.addEventListener('click', () => {
          themeBtns.forEach(btn => btn.classList.remove('active'))
          btn.classList.add('active')
          handleToggleClick(
            btn.getAttribute('data-site-theme') as 'dark' | 'light'
          )
        })
      })
    }
  }

  function handleButtonClassOnLoad(){
    const element = document.documentElement
    const storedTheme = localStorage.getItem('crisfsdev-theme')
    if (storedTheme === 'dark') {
      element.classList.add('dark')
      document.querySelector(`.theme-toggle-btn[data-site-theme="dark"]`)?.classList.add('active')
    } else {
      element.classList.remove('dark')
      document.querySelector(`.theme-toggle-btn[data-site-theme="light"]`)?.classList.add('active')
    }
  }

  initThemeToggle()
  handleButtonClassOnLoad()

  document.addEventListener('astro:after-swap', () => {
    const storedTheme = localStorage.getItem('crisfsdev-theme')
    const element = document.documentElement

    element.classList.add('disable-transitions')

    window.getComputedStyle(element).getPropertyValue('opacity')

    if (storedTheme === 'dark') {
      element.classList.add('dark')
      document.querySelector(`.theme-toggle-btn[data-site-theme="dark"]`)?.classList.add('active')
    } else if (storedTheme === 'system') {
      if (window.matchMedia('(prefers-color-scheme: dark)').matches) {
        element.classList.add('dark');
      }
    } else {
      element.classList.remove('dark')
      document.querySelector(`.theme-toggle-btn[data-site-theme="light"]`)?.classList.add('active')
    }

    requestAnimationFrame(() => {
      element.classList.remove('disable-transitions')
    })

    initThemeToggle()
  });

  document.addEventListener('keydown', (event) => {
  if (event.key.toLowerCase() === 't') {
    const element = document.documentElement
    const isDark = element.classList.toggle('dark') // ðŸ‘ˆ alterna automaticamente

    // Atualiza os botÃµes
    document
      .querySelectorAll('.theme-toggle-btn')
      .forEach(btn => btn.classList.remove('active'))

    const targetTheme = isDark ? 'dark' : 'light'
    handleToggleClick(targetTheme)
  }
})

</script>
